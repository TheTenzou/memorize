version: "3.8"

volumes: 
  redisdata:
  pgdata_account:

services:

  reverse-proxy:
    image: traefik:v2.2
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  account-client:
    build: 
      context: ./account-client
    image: account-client
    expose: 
      - "3000"
    ports: 
      - "3000:3000"
    labels: 
      - "traefik.enable=true"
      - "traefik.http.routers.account-client.rule=Host(`localhost`) && PathPrefix(`/account/`)"
    volumes: 
      - ./account-client:/app
      - /app/node_modules
    depends_on: 
      - reverse-proxy
  
  account:
    build:
      context: ./account
      target: builder
    image: account
    env_file: ./account/.dev.env
    environment:
      - ENV=dev
      - POSTGRES_HOST=postgres-account
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis-account
      - REDIS_PORT=6379
    expose:
      - "8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.account.rule=Host(`localhost`) && PathPrefix(`/api/account`)"
    volumes:
      - ./account:/go/src/app
    depends_on:
      - postgres-account
      - redis-account
      - reverse-proxy
    command: ./wait-for.sh redis-account:6379 -- ./wait-for.sh postgres-account:5432 -- reflex -r "\.go$$" -s -- sh -c "go run ./"

  redis-account:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - "redisdata:/data"
  
  postgres-account:
    image: "postgres:alpine"
    env_file: ./account/.dev.env
    ports:
      - "5432:5432"
    volumes:
      - "pgdata_account:/var/lib/postgresql/data"
    command: ["postgres", "-c", "log_statement=all"]